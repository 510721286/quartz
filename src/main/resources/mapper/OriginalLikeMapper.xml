<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.njzhaomi.quartz.yuejia.dao.OriginalLikeMapper" >
  <resultMap id="BaseResultMap" type="com.njzhaomi.quartz.yuejia.povo.OriginalLike" >
    <id column="id" property="id" jdbcType="DECIMAL" />
    <result column="cancleTime" property="cancletime" jdbcType="TIMESTAMP" />
    <result column="caseId" property="caseid" jdbcType="BIGINT" />
    <result column="entity" property="entity" jdbcType="VARCHAR" />
    <result column="likeTime" property="liketime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cancleTime, caseId, entity, likeTime, status, uid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.njzhaomi.quartz.yuejia.povo.OriginalLikeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_original_like
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_original_like
    where id = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_original_like
    where id = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.njzhaomi.quartz.yuejia.povo.OriginalLikeExample" >
    delete from t_original_like
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njzhaomi.quartz.yuejia.povo.OriginalLike" >
    insert into t_original_like (id, cancleTime, caseId, 
      entity, likeTime, status, 
      uid)
    values (#{id,jdbcType=DECIMAL}, #{cancletime,jdbcType=TIMESTAMP}, #{caseid,jdbcType=BIGINT}, 
      #{entity,jdbcType=VARCHAR}, #{liketime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{uid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.njzhaomi.quartz.yuejia.povo.OriginalLike" >
    insert into t_original_like
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cancletime != null" >
        cancleTime,
      </if>
      <if test="caseid != null" >
        caseId,
      </if>
      <if test="entity != null" >
        entity,
      </if>
      <if test="liketime != null" >
        likeTime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="uid != null" >
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="cancletime != null" >
        #{cancletime,jdbcType=TIMESTAMP},
      </if>
      <if test="caseid != null" >
        #{caseid,jdbcType=BIGINT},
      </if>
      <if test="entity != null" >
        #{entity,jdbcType=VARCHAR},
      </if>
      <if test="liketime != null" >
        #{liketime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njzhaomi.quartz.yuejia.povo.OriginalLikeExample" resultType="java.lang.Integer" >
    select count(*) from t_original_like
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_original_like
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.cancletime != null" >
        cancleTime = #{record.cancletime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.caseid != null" >
        caseId = #{record.caseid,jdbcType=BIGINT},
      </if>
      <if test="record.entity != null" >
        entity = #{record.entity,jdbcType=VARCHAR},
      </if>
      <if test="record.liketime != null" >
        likeTime = #{record.liketime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_original_like
    set id = #{record.id,jdbcType=DECIMAL},
      cancleTime = #{record.cancletime,jdbcType=TIMESTAMP},
      caseId = #{record.caseid,jdbcType=BIGINT},
      entity = #{record.entity,jdbcType=VARCHAR},
      likeTime = #{record.liketime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njzhaomi.quartz.yuejia.povo.OriginalLike" >
    update t_original_like
    <set >
      <if test="cancletime != null" >
        cancleTime = #{cancletime,jdbcType=TIMESTAMP},
      </if>
      <if test="caseid != null" >
        caseId = #{caseid,jdbcType=BIGINT},
      </if>
      <if test="entity != null" >
        entity = #{entity,jdbcType=VARCHAR},
      </if>
      <if test="liketime != null" >
        likeTime = #{liketime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njzhaomi.quartz.yuejia.povo.OriginalLike" >
    update t_original_like
    set cancleTime = #{cancletime,jdbcType=TIMESTAMP},
      caseId = #{caseid,jdbcType=BIGINT},
      entity = #{entity,jdbcType=VARCHAR},
      likeTime = #{liketime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      uid = #{uid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=DECIMAL}
  </update>
</mapper>